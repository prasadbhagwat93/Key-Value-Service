package kvstore;
import java.util.*;

import org.apache.thrift.TException;
import org.apache.thrift.protocol.TBinaryProtocol;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TTransport;
import org.apache.thrift.transport.TTransportException;

import java.lang.*;;
public class RandomRequestGenerator implements Runnable  {
	String threadName;
	Thread t;
	KVStore.Client client;
	RandomRequestGenerator(String name ){
		threadName = name;
		//client = para;
		TTransport transport;
		transport = new TSocket("localhost",9090); //Connecting to port
	    try {
			transport.open();
		} catch (TTransportException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	    TProtocol protocol = new  TBinaryProtocol(transport); 
	    client = new  KVStore.Client(protocol);
	}
	
	@Override
	public void run() {
		
		System.out.println("this thread is " +threadName);
		try {
			 
			execute(client,"-set");
			execute(client,"-get");
		} catch (TException e) {
			e.printStackTrace();
		}
		
	}
	public void start(){
		
		System.out.println(" Starting " + threadName);
		t = new Thread(this,threadName);
		t.start();
	}
	
	public  void execute(KVStore.Client client,String operation) throws TException{
		 Result res = null;
		 switch (operation) { 		//select operation
		 
		 case "-set" :
			  res = client.kvset("a","b");
			 System.out.println("Exitcode "+res.error.getValue());
			 //System.exit(res.error.getValue());
			 break;
		 case "-get" :
			 System.out.println(" ---> ");
			 res = client.kvget("a");
			 if(res.error.getValue() == 0){
				 System.out.println("Value is "+ res.value);
				 System.out.println("Exitcode "+res.error.getValue());
				// System.exit(res.error.getValue());
			 }
			 else{
				 System.err.println(res.errortext);
				 System.out.println("Exitcode "+res.error.getValue());
				 //System.exit(res.error.getValue());
			 }
			 
			 break;
		 case "-delete" :
			 res = client.kvdelete("b");
			 if(res.error.getValue() == 0){
				 System.out.println("Exitcode "+res.error.getValue());
				 System.exit(res.error.getValue());
			 }
			 else{
				 System.err.println(res.errortext);
				 System.out.println("Exitcode "+res.error.getValue());
				 System.exit(res.error.getValue());
			 }
			 break;
			 
		default: 
			System.out.println("Some error in command");
		 
		 }
		 
	 }

}
